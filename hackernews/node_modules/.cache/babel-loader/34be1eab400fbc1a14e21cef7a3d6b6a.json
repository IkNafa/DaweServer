{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iker\\\\IdeaProjects\\\\hackernews\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Table from 'components/Table.js';\nimport './App.css';\nimport Moment from \"react-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('moment/locale/es.js');\n\nconst DEFAULT_QUERY = 'react';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  }\n\n  onSearchSubmit(event) {\n    const {\n      searchTerm\n    } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  setSearchTopStories(result) {\n    this.setState({\n      result\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const {\n      searchTerm\n    } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onDismiss(id) {\n    console.log(id);\n\n    function isNotId(item) {\n      return item.objectID !== id;\n    }\n\n    const updatedList = this.state.result.hits.filter(isNotId);\n    this.setState({\n      result: { ...this.state.result,\n        hits: updatedList\n      }\n    });\n  }\n\n  render() {\n    const {\n      result,\n      searchTerm\n    } = this.state;\n    const page = result && result.page || 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interactions\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          value: searchTerm,\n          onChange: this.onSearchChange,\n          onSubmit: this.onSearchSubmit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(Table, {\n        list: result.hits,\n        onDismiss: this.onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interactions\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.fetchSearchTopStories(searchTerm, page + 1),\n          children: \"More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: onSubmit,\n  children: [children, /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 101,\n  columnNumber: 5\n}, this);\n\n_c = Search;\n\nconst Button = ({\n  onClick,\n  className = '',\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button-inline\",\n    onClick: onClick,\n    className: className,\n    type: \"button\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = Button;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["C:/Users/Iker/IdeaProjects/hackernews/src/App.js"],"names":["React","Component","Table","Moment","require","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","App","constructor","props","state","result","searchTerm","fetchSearchTopStories","bind","onDismiss","onSearchChange","setSearchTopStories","onSearchSubmit","event","preventDefault","setState","page","fetch","then","response","json","catch","error","componentDidMount","target","value","id","console","log","isNotId","item","objectID","updatedList","hits","filter","render","Search","onChange","onSubmit","children","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Table from 'components/Table.js'\nimport './App.css';\nimport Moment from \"react-moment\";\nrequire('moment/locale/es.js')\nconst DEFAULT_QUERY = 'react';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result : null,\n      searchTerm: DEFAULT_QUERY,\n    };\n\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n\n  }\n\n  onSearchSubmit(event){\n    const {searchTerm} = this.state;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n\n  }\n  setSearchTopStories(result){\n    this.setState({result});\n  }\n\n  fetchSearchTopStories(searchTerm, page= 0){\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`)\n        .then(response => response.json())\n        .then(result => this.setSearchTopStories(result))\n        .catch(error => error);\n  }\n\n  componentDidMount() {\n    const {searchTerm} = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({searchTerm: event.target.value});\n  }\n\n  onDismiss(id) {\n    console.log(id);\n\n    function isNotId(item) {\n      return item.objectID !== id;\n    }\n\n    const updatedList = this.state.result.hits.filter(isNotId);\n    this.setState({\n      result : { ...this.state.result, hits: updatedList }\n    })\n\n  }\n\n  render() {\n\n    const {result, searchTerm} = this.state;\n    const page = (result && result.page) || 0;\n    return (\n        <div className=\"page\">\n          <div className=\"interactions\">\n            <Search value={searchTerm}\n                    onChange={this.onSearchChange}\n                    onSubmit={this.onSearchSubmit}\n            >\n\n              Search\n            </Search>\n          </div>\n          { result &&\n          <Table list={result.hits}\n                 onDismiss={this.onDismiss}/>\n          }\n          <div className={\"interactions\"}>\n            <Button onClick={() => this.fetchSearchTopStories(searchTerm, page + 1)}>\n              More\n            </Button>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst Search = ({value, onChange, onSubmit, children}) =>\n    <form onSubmit={onSubmit}>\n      {children}\n      <input type=\"text\"\n             value={value}\n             onChange={onChange}\n      />\n      <button type=\"submit\">{children}</button>\n    </form>;\n\nconst Button = ({onClick, className='', children}) => {\n  return (\n      <button className=\"button-inline\"\n            onClick={onClick}\n            className={className}\n            type=\"button\"\n      >{children}</button>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}